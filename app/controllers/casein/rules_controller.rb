# Scaffolding generated by Casein v5.1.1.5

module Casein
  class RulesController < Casein::CaseinController

    ## optional filters for defining usage according to Casein::AdminUser access_levels
    # before_filter :needs_admin, :except => [:action1, :action2]
    # before_filter :needs_admin_or_current_user, :only => [:action1, :action2]

    def index
      @casein_page_title = 'Rules'
  		@rules = Rule.order(sort_order(:rulespdf)).paginate :page => params[:page]
    end

    def show
      @casein_page_title = 'View rule'
      @rule = Rule.find params[:id]
    end

    def new
      @casein_page_title = 'Add a new rule'
    	@rule = Rule.new
    end

    def create
      @rule = Rule.new rule_params
      @rule.rulespdf = params[:rule][:rulespdf]
      if @rule.save
        flash[:notice] = 'Rule created'
        redirect_to casein_rules_path
      else
        flash.now[:warning] = 'There were problems when trying to create a new rule'
        render :action => :new
      end
    end

    def update
      @casein_page_title = 'Update rule'

      @rule = Rule.find params[:id]

      if @rule.update_attributes rule_params
        flash[:notice] = 'Rule has been updated'
        redirect_to casein_rules_path
      else
        flash.now[:warning] = 'There were problems when trying to update this rule'
        render :action => :show
      end
    end

    def destroy
      @rule = Rule.find params[:id]

      @rule.destroy
      flash[:notice] = 'Rule has been deleted'
      redirect_to casein_rules_path
    end

    private

      def rule_params
        params.require(:rule).permit(:rulespdf, :intensive)
      end

  end
end
